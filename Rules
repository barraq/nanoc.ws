#!/usr/bin/env ruby

require 'compass'
require 'susy'

Compass.add_project_configuration 'compass_config.rb'

preprocess do
  config[:nanoc_version_info] = Nanoc.version_information
  config[:gem_version_info]   = Gem::VERSION
  config[:ruby_version_info]  = `ruby --version`.strip

  @items.create('', { is_hidden: true }, '/search-index.erb')
end

layout '/**/*', :erb

# Partials

ignore '/**/_*'

# favicon

passthrough '/favicon.ico'

# assets

passthrough '/assets/fonts/**/*'
passthrough '/assets/images/**/*'

# stylesheets

compile '/assets/style/*' do
  filter :sass, Compass.sass_engine_options
  filter :relativize_paths, :type => :css
  filter :rainpress
end

route '/assets/style/*' do
  item.identifier.without_ext + '-v' + rep.item[:version].to_s + '.css'
end

# other

compile '/sitemap.*' do
  filter :erb
end

compile '/robots.*' do
  filter :erb
end

# index

compile '/index.*' do
  filter :erb
  layout '/default.*'
  filter :relativize_paths, :type => :html
  filter :html5small
end

route '/index.*' do
  '/index.html'
end

# 404

compile '/404.*' do
  layout '/default.*'
  filter :typohero
  filter :html5small
end

route '/404.*' do
  '/404.html'
end

## search

compile '/**/*.{md,html,erb}', rep: :search do
  filter :erb if item[:is_dynamic]
  filter :kramdown if 'md' == item[:extension]
  filter :admonition
  filter :to_search_json
end

route '/**/*.{md,html,erb}', rep: :search do
  nil
end

compile '/search-index.*' do
  layout '/search-index.*'
end

route '/search-index.*' do
  '/search-index.json'
end

# fallback

compile '/**/*' do
  filter :erb if item[:is_dynamic]
  if 'md' == item[:extension]
    filter :kramdown, :auto_ids => false
  end
  filter :admonition
  filter :remove_spacing_around_pre
  filter :add_ids_to_headers
  if item.identifier.to_s == '/release-notes'
    filter :link_github_issues
  end

  layout '/default.*'

  filter :add_toc
  filter :colorize_syntax, :is_fullpage => true
  filter :relativize_paths, :type => :html
  filter :fixup_whitespace
  filter :typohero
  filter :html5small
end

route '/**/*' do
  if item.binary?
    item.identifier.to_s
  elsif item[:path]
    item[:path]
  else
    item.identifier.without_ext + '/index.html'
  end
end
